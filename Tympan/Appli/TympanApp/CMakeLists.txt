set(MODULE_NAME tympan_qt_app)

file(GLOB ${MODULE_NAME}_SRCS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} *.cpp *.h *.hpp)
# Some problematic / unused source files to be removed
list(REMOVE_ITEM ${MODULE_NAME}_SRCS
  TYRouteDeblaiEditor.cpp TYRouteDeblaiEditor.h # Temporarily disabled
  )

# Headers requiring MOC pre-processing...
file(GLOB ${MODULE_NAME}_MOC_HDRS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} *.h )
# ... all in this directory but for the one below
list(REMOVE_ITEM ${MODULE_NAME}_MOC_HDRS
    OSplashScreen.h
    TYAction.h
    TYActions.h
    TYAppDefines.h
    TYCustomPopupMenu.h
    TYDOMErrorHandler.h
    TYDXFBDTOPOImporter.h
    TYDXFImporter.h
    TYDXFBDTOPOSpecifications.h
    TYElementCheckListItem.h
    TYElementListItem.h
    TYMenuItem.h
    TYMessageManager.h
    TYOpenGLRenderer.h
    TYPHTympanApp.h
    TYVersion.h
    TYRouteDeblaiEditor.h # Temporarily disabled
)

# Needed to import DXF files.
add_definitions (-DTY_USE_DXF -DDIME_NOT_DLL) # XXX Add DIME_NOT_DLL too?? See
                                              # the define and the comment in
                                              # 'TYDXFImporter.h'.

# Call moc on the listed headers, thus generating new sources
qt4_wrap_cpp(${MODULE_NAME}_MOC_SRCS ${${MODULE_NAME}_MOC_HDRS})

#find_package(PythonLibs REQUIRED)
#include_directories(${PYTHON_INCLUDE_DIRS})

# Beware: those "modules" aka libraries must be given in reverse dependency order
# XXX Check whether tympan_acoustic_raytracer must be linked here or in solver modules
set(TYMPAN_MODULES  
  tympan_acoustic_raytracer 
  tympan_dm_metier tympan_dm_graphics tympan_dm_ihm  tympan_dm_core
  tympan_tools_metier tympan_tools_graphics
  tympan_tools
)

set_precompiled_header(${MODULE_NAME} CXX
  ${CMAKE_CURRENT_SOURCE_DIR}/TYPHTympanApp.h ${MODULE_NAME}_PCH_SRCS)
add_executable(${MODULE_NAME}  ${${MODULE_NAME}_SRCS} ${${MODULE_NAME}_PCH_SRCS}
                               ${${MODULE_NAME}_MOC_SRCS} )    #Sources generated by MOC
set_property(TARGET ${MODULE_NAME} PROPERTY FOLDER ${CURRENT_FOLDER})
use_precompiled_header(${MODULE_NAME} ${MODULE_NAME}_SRCS)

if(LOGILAB_USE_PRECOMPILED_HEADER)
add_dependencies(${MODULE_NAME}_pch Yams)
endif(LOGILAB_USE_PRECOMPILED_HEADER)
add_dependencies(${MODULE_NAME} ${TYMPAN_MODULES})
add_dependencies(${MODULE_NAME} Dime)

# Set the actual executble name to 'Tympan' or Tympand for debug version
set_property(TARGET ${MODULE_NAME} PROPERTY OUTPUT_NAME Tympan)
set_property(TARGET ${MODULE_NAME} PROPERTY DEBUG_POSTFIX "_d")
set(ADDITIONNAL_LIBRARIES "dime")

if (WIN32)
        LIST(APPEND ADDITIONNAL_LIBRARIES winmm.lib)
else ()

endif ()


link_directories(${CGAL_LIBRARIES_DIR})
target_link_libraries(${MODULE_NAME} ${QT_LIBRARIES} ${TYMPAN_MODULES}
                               ${OPENGL_LIBRARIES} ) # ${PYTHON_LIBRARIES}

foreach(lib ${ADDITIONNAL_LIBRARIES})
   target_link_libraries(${MODULE_NAME} ${lib})
endforeach()

install(TARGETS ${MODULE_NAME}
        DESTINATION . )


if(SYS_NATIVE_WIN)
  # From http://www.cmake.org/Wiki/BundleUtilitiesExample
  
  #--------------------------------------------------------------------------------
  # Use BundleUtilities to get all other dependencies for the application to work.
  # It takes a bundle or executable along with possible plugins and inspects it
  # for dependencies.  If they are not system dependencies, they are copied.
  
  # directories to look for dependencies
  SET(APPS_Debug   "\${CMAKE_INSTALL_PREFIX}/Tympan_d.exe")
  SET(APPS_Release "\${CMAKE_INSTALL_PREFIX}/Tympan.exe")
  SET(DLL_FROM_DIRS ${TYMPAN_3RDPARTY_DLL_DIRS})
  
  # Now the work of copying dependencies into the bundle/package
  # The quotes are escaped and variables to use at install time have their $ escaped
  # An alternative is the do a configure_file() on a script and use install(SCRIPT  ...).
  INSTALL(CODE "
    # Takes the configuration into account
    set(TYMPAN_INSTALL_PLUGINS_Release ${TYMPAN_INSTALL_PLUGINS_Release})
    set(TYMPAN_INSTALL_PLUGINS_Debug ${TYMPAN_INSTALL_PLUGINS_Debug})
    set(APPS_Release ${APPS_Release})
    set(APPS_Debug ${APPS_Debug})
    set(_plugins_dir \${TYMPAN_PLUGINS_\${CMAKE_INSTALL_CONFIG_NAME}})
    set(_apps \${APPS_\${CMAKE_INSTALL_CONFIG_NAME}})

    file(GLOB_RECURSE PLUGINS
      \"\${CMAKE_INSTALL_PREFIX}/\${_plugins_dir}/*${CMAKE_SHARED_LIBRARY_SUFFIX}\")
    include(BundleUtilities)
    fixup_bundle(\"\${_apps}\" \"\${PLUGINS}\" \"${DLL_FROM_DIRS}\")
    " COMPONENT Runtime )
endif(SYS_NATIVE_WIN)